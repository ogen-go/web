"use strict";(globalThis.webpackChunkdocs_v_2=globalThis.webpackChunkdocs_v_2||[]).push([[965],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(r),m=a,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||l;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8967:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const l={id:"request_lifecycle",title:"Request lifecycle",sidebar_label:"Request lifecycle"},i=void 0,o={unversionedId:"misc/request_lifecycle",id:"misc/request_lifecycle",title:"Request lifecycle",description:"Server",source:"@site/docs/misc/request_lifecycle.md",sourceDirName:"misc",slug:"/misc/request_lifecycle",permalink:"/docs/misc/request_lifecycle",draft:!1,editUrl:"https://github.com/ogen-go/web/edit/main/docs/misc/request_lifecycle.md",tags:[],version:"current",frontMatter:{id:"request_lifecycle",title:"Request lifecycle",sidebar_label:"Request lifecycle"},sidebar:"tutorialSidebar",previous:{title:"Static router",permalink:"/docs/concepts/static_router"},next:{title:"FAQ",permalink:"/docs/faq"}},d={},s=[{value:"Server",id:"server",level:2},{value:"<code>net/http</code>",id:"nethttp",level:3},{value:"OpenTelemetry",id:"opentelemetry",level:3},{value:"Security handlers",id:"security-handlers",level:3},{value:"Parameters decoder",id:"parameters-decoder",level:3},{value:"Request body decoder",id:"request-body-decoder",level:3},{value:"<code>multipart/form-data</code>",id:"multipartform-data",level:4},{value:"Handler",id:"handler",level:3},{value:"Convenient errors",id:"convenient-errors",level:4},{value:"Error handling",id:"error-handling",level:3}],p={toc:s},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"server"},"Server"),(0,a.kt)("h3",{id:"nethttp"},(0,a.kt)("inlineCode",{parentName:"h3"},"net/http")),(0,a.kt)("p",null,"First, request comes from http server and goes through any ",(0,a.kt)("inlineCode",{parentName:"p"},"net/http")," middleware that wrap generated ",(0,a.kt)("inlineCode",{parentName:"p"},"Server"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Server")," routes request to the operation handler. ",(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/static_router"},"More about router here"),"."),(0,a.kt)("h3",{id:"opentelemetry"},"OpenTelemetry"),(0,a.kt)("p",null,"Before handling request handler creates a trace and increases requests counter."),(0,a.kt)("h3",{id:"security-handlers"},"Security handlers"),(0,a.kt)("p",null,"Security requirements are handled first in order to not handle unauthorized/unauthenticated requests."),(0,a.kt)("p",null,"If OpenAPI specification defines any security requirements, ogen generates a ",(0,a.kt)("inlineCode",{parentName:"p"},"SecurityHandler")," interface.\nFor each security scheme, operation handler does this:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Checks the presence of value, defined by scheme"),(0,a.kt)("li",{parentName:"ul"},"If value is present, parses and validates it, then calls the corresponding method of ",(0,a.kt)("inlineCode",{parentName:"li"},"SecurityHandler")),(0,a.kt)("li",{parentName:"ul"},"If any error occured during this process, handler generates a ",(0,a.kt)("inlineCode",{parentName:"li"},"ogenerrors.SecurityError"),", then calls ",(0,a.kt)("a",{parentName:"li",href:"#error-handling"},"error handler"))),(0,a.kt)("p",null,"When all security schemes are parsed, ogen tries to find a requriements that satisfied by these schemes.\nIf there is no such requirement, handler returns ",(0,a.kt)("inlineCode",{parentName:"p"},"ogenerrors.ErrSecurityRequirementIsNotSatisfied"),"."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Handler calls method of ",(0,a.kt)("inlineCode",{parentName:"p"},"SecurityHandler"),", even if there is already one satisified requirement.\nIt is done to be sure that every scheme value is validated and checked.")),(0,a.kt)("p",null,"For example, let's say we have a specification like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "security": [\n    {\n      "basicAuth": [],\n      "headerKey": []\n    },\n    {\n      "bearerToken": [],\n      "headerKey": []\n    }\n  ],\n  "components": {\n    "securitySchemes": {\n      "headerKey": {\n        "type": "apiKey",\n        "in": "header",\n        "name": "X-Api-Key"\n      },\n      "basicAuth": {\n        "type": "http",\n        "scheme": "basic"\n      },\n      "bearerToken": {\n        "type": "http",\n        "scheme": "bearer"\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Basically, this specification defines two possible requirements: ",(0,a.kt)("inlineCode",{parentName:"p"},"(bearerToken && headerKey) || (basicAuth && headerKey)"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"th"},"headerKey")," scheme"),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"th"},"basicAuth")," scheme"),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"th"},"bearerToken")," scheme"),(0,a.kt)("th",{parentName:"tr",align:null},"Result"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Not present\u274c"),(0,a.kt)("td",{parentName:"tr",align:null},"OK")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Not present\u274c"),(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"OK")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"OK")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Not present\u274c"),(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Error")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Present \u2705"),(0,a.kt)("td",{parentName:"tr",align:null},"Not present\u274c"),(0,a.kt)("td",{parentName:"tr",align:null},"Not present\u274c"),(0,a.kt)("td",{parentName:"tr",align:null},"Error")))),(0,a.kt)("h3",{id:"parameters-decoder"},"Parameters decoder"),(0,a.kt)("p",null,"If any error occured during decoding, parameter decoder generates a ",(0,a.kt)("inlineCode",{parentName:"p"},"ogenerrors.DecodeParamsError"),", then calls ",(0,a.kt)("a",{parentName:"p",href:"#error-handling"},"error handler")),(0,a.kt)("h3",{id:"request-body-decoder"},"Request body decoder"),(0,a.kt)("p",null,"At first body decoder tries to match given ",(0,a.kt)("inlineCode",{parentName:"p"},"Content-Type")," with defined in spec.\nIf there is no match, decoder generates a ",(0,a.kt)("inlineCode",{parentName:"p"},"validate.InvalidContentTypeError")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Note that request decoder reads entire request to the memory except for big multipart files.")),(0,a.kt)("p",null,"If any error occured during decoding, body decoder generates a ",(0,a.kt)("inlineCode",{parentName:"p"},"ogenerrors.DecodeRequestError"),", then calls ",(0,a.kt)("a",{parentName:"p",href:"#error-handling"},"error handler")),(0,a.kt)("h4",{id:"multipartform-data"},(0,a.kt)("inlineCode",{parentName:"h4"},"multipart/form-data")),(0,a.kt)("p",null,"If form file is too big, multipart reader temporarily stores it on disk. Limit is defined by ",(0,a.kt)("inlineCode",{parentName:"p"},"MaxMultipartMemory"),".\nThese files are available until handler returns."),(0,a.kt)("p",null,"If any error occured during decoding, ",(0,a.kt)("strong",{parentName:"p"},"handler closes and deletes all temporary files"),"."),(0,a.kt)("h3",{id:"handler"},"Handler"),(0,a.kt)("p",null,"When all parts of request are parsed, user-defined ",(0,a.kt)("inlineCode",{parentName:"p"},"Handler")," is called."),(0,a.kt)("p",null,"If any middleware set via ",(0,a.kt)("inlineCode",{parentName:"p"},"WithMiddleware")," option, ",(0,a.kt)("inlineCode",{parentName:"p"},"Handler")," passed to the middleware as ",(0,a.kt)("inlineCode",{parentName:"p"},"next")," parameter."),(0,a.kt)("h4",{id:"convenient-errors"},"Convenient errors"),(0,a.kt)("p",null,"In case if handler returns an error and ",(0,a.kt)("a",{parentName:"p",href:"/docs/concepts/convenient_errors"},"Convenient errors")," are available, behavior depends on error type:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If error type is equal to convenient error schema (e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"ErrorStatusCode"),"), it passed directly to response encoder"),(0,a.kt)("li",{parentName:"ul"},"If error is ",(0,a.kt)("inlineCode",{parentName:"li"},"ht.ErrNotImplemented"),", ",(0,a.kt)("a",{parentName:"li",href:"#error-handling"},"error handler")," will be called"),(0,a.kt)("li",{parentName:"ul"},"Otherwise, ",(0,a.kt)("inlineCode",{parentName:"li"},"NewError")," method will be called")),(0,a.kt)("h3",{id:"error-handling"},"Error handling"),(0,a.kt)("p",null,"If any occured during request handling, handler does this:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Increases error counter"),(0,a.kt)("li",{parentName:"ul"},"Sets trace status to error"),(0,a.kt)("li",{parentName:"ul"},"Records error using ",(0,a.kt)("a",{parentName:"li",href:"https://pkg.go.dev/go.opentelemetry.io/otel/trace#Span.RecordError"},(0,a.kt)("inlineCode",{parentName:"a"},"Span.RecordError")),". It appears in trace as ",(0,a.kt)("a",{parentName:"li",href:"https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/exceptions/"},(0,a.kt)("inlineCode",{parentName:"a"},"exception.*")," attributes"),".")))}u.isMDXComponent=!0}}]);