"use strict";(globalThis.webpackChunkdocs_v_2=globalThis.webpackChunkdocs_v_2||[]).push([[680],{5680:(e,n,r)=>{r.d(n,{xA:()=>p,yg:()=>f});var t=r(6540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},p=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||s;return r?t.createElement(f,a(a({ref:n},p),{},{components:r})):t.createElement(f,a({ref:n},p))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[d]="string"==typeof e?e:o,a[1]=i;for(var l=2;l<s;l++)a[l]=r[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5659:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var t=r(8168),o=(r(6540),r(5680));const s={id:"convenient_errors",title:"Convenient errors",sidebar_label:"Convenient errors"},a=void 0,i={unversionedId:"concepts/convenient_errors",id:"concepts/convenient_errors",title:"Convenient errors",description:"If spec meets all following requirements:",source:"@site/docs/concepts/convenient_errors.md",sourceDirName:"concepts",slug:"/concepts/convenient_errors",permalink:"/docs/concepts/convenient_errors",draft:!1,editUrl:"https://github.com/ogen-go/web/edit/main/docs/concepts/convenient_errors.md",tags:[],version:"current",frontMatter:{id:"convenient_errors",title:"Convenient errors",sidebar_label:"Convenient errors"},sidebar:"tutorialSidebar",previous:{title:"Sum type",permalink:"/docs/types/sumtype"},next:{title:"Interface responses",permalink:"/docs/concepts/interface_responses"}},c={},l=[{value:"Force or Disable <code>Convenient errors</code>",id:"force-or-disable-convenient-errors",level:3}],p={toc:l},d="wrapper";function u(e){let{components:n,...r}=e;return(0,o.yg)(d,(0,t.A)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"If spec meets all following requirements:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Every operation defines the same ",(0,o.yg)("inlineCode",{parentName:"li"},"default")," response"),(0,o.yg)("li",{parentName:"ul"},"This response defines only one ",(0,o.yg)("inlineCode",{parentName:"li"},"application/json")," media")),(0,o.yg)("p",null,"then ",(0,o.yg)("inlineCode",{parentName:"p"},"ogen")," generates special handler for errors returned by ",(0,o.yg)("inlineCode",{parentName:"p"},"Handler")," implementation and does not generate default response variant."),(0,o.yg)("p",null,"For example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'openapi: 3.0.3\ninfo:\n  title: Convenient errors example\n  version: 0.1.0\npaths:\n  /me:\n    get:\n      responses:\n        "200":\n          description: User\n          content:\n            application/json:\n              schema:\n                $ref: "#/components/schemas/User"\n        default:\n          description: General Error\n          content:\n            application/json:\n              schema:\n                $ref: "#/components/schemas/Error"\n  /users:\n    post:\n      requestBody:\n        description: User to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: "#/components/schemas/User"\n      responses:\n        "201":\n          description: OK\n        default:\n          description: General Error\n          content:\n            application/json:\n              schema:\n                $ref: "#/components/schemas/Error"\ncomponents:\n  schemas:\n    User:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: integer\n    Error:\n      description: Represents error object\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int64\n        message:\n          type: string\n      required:\n        - code\n        - message\n')),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-go"},"// Handler handles operations described by OpenAPI v3 specification.\ntype Handler interface {\n    ...\n    // NewError creates ErrorStatusCode from error returned by handler.\n    //\n    // Used for common default response.\n    NewError(ctx context.Context, err error) ErrorStatusCode\n}\n")),(0,o.yg)("h3",{id:"force-or-disable-convenient-errors"},"Force or Disable ",(0,o.yg)("inlineCode",{parentName:"h3"},"Convenient errors")),(0,o.yg)("p",null,"Use ",(0,o.yg)("inlineCode",{parentName:"p"},"generator.convenient_errors")," option"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},'generator:\n  # `auto` (default) generates `NewError` if possible\n  # `on` tells generator to fail if spec does not meet requirements\n  # `off` disables `Convenient errors` at all\n  convenient_errors: "auto"\n')))}u.isMDXComponent=!0}}]);