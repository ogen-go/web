"use strict";(globalThis.webpackChunkdocs_v_2=globalThis.webpackChunkdocs_v_2||[]).push([[691],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294),a=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(7462),a=n(7294),o=n(6010),l=n(2389),i=n(7392),p=n(7094),s=n(2466);const u="tabList__CuJ",c="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:l,values:m,groupId:d,className:f}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??g.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),b=(0,i.l)(y,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===l?l:l??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:k}=(0,p.U)(),[x,T]=(0,a.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:N}=(0,s.o5)();if(null!=d){const e=h[d];null!=e&&e!==x&&y.some((t=>t.value===e))&&T(e)}const C=e=>{const t=e.currentTarget,n=w.indexOf(t),r=y[n].value;r!==x&&(N(t),T(r),null!=d&&k(d,String(r)))},q=e=>{let t=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},f)},y.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>w.push(e),onKeyDown:q,onClick:C},l,{className:(0,o.Z)("tabs__item",c,l?.className,{"tabs__item--active":x===t})}),n??t)}))),t?(0,a.cloneElement)(g.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function d(e){const t=(0,l.Z)();return a.createElement(m,(0,r.Z)({key:String(t)},e))}},5167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>T,contentTitle:()=>k,default:()=>C,frontMatter:()=>h,metadata:()=>x,toc:()=>w});var r=n(7462),a=(n(7294),n(3905)),o=n(5488),l=n(5162);const i={toc:[]};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package example\n\nimport (\n    "context"\n    "os"\n\n    "github.com/ogen-go/ogen/example/api"\n)\n\nfunc UploadAvatarFile(ctx context.Context, client *api.Client, p string) error {\n    img, err := os.Open(p)\n    if err != nil {\n        return err\n    }\n    defer func() {\n        _ = img.Close()\n    }()\n\n    if _, err := client.UploadAvatar(ctx, api.UploadAvatarReq{Data: img}); err != nil {\n        return err\n    }\n    return nil\n}\n')))}p.isMDXComponent=!0;const s={toc:[]};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package example\n\nimport (\n    "context"\n    "image/png"\n    "io"\n    "os"\n\n    "github.com/go-faster/errors"\n\n    api "<your_api_package>"\n)\n\nvar _ api.Handler = AvatarService{}\n\ntype Storage interface {\n    Store(ctx context.Context, data io.Reader) error\n}\n\ntype AvatarService struct {\n    storage Storage\n}\n\nfunc (s AvatarService) UploadAvatar(ctx context.Context, req api.UploadAvatarReq) (resp api.UploadAvatarOK, _ error) {\n    f, err := os.CreateTemp("", "avatar")\n    if err != nil {\n        return resp, err\n    }\n    defer func() {\n        _ = f.Close()\n    }()\n\n    const maxImageBytes = 16 * 1024 * 1024 // 16MB\n    if _, err := io.Copy(f, io.LimitReader(req.Data, maxImageBytes)); err != nil {\n        return resp, err\n    }\n\n    // Sniff image format and size.\n    header, err := png.DecodeConfig(f)\n    if err != nil {\n        return resp, errors.Wrap(err, "decode image")\n    }\n\n    // Validate image size.\n    if header.Width < 96 || header.Height < 96 {\n        return resp, errors.New("image is too small")\n    }\n    if header.Width > 1000 || header.Height > 1000 {\n        return resp, errors.New("image is too big")\n    }\n\n    // Seek to the beginning of the file.\n    if _, err := f.Seek(0, io.SeekStart); err != nil {\n        return resp, err\n    }\n\n    // Store image.\n    if err := s.storage.Store(ctx, f); err != nil {\n        return resp, err\n    }\n    return resp, nil\n}\n')))}u.isMDXComponent=!0;const c={toc:[]};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"openapi: 3.0.3\ninfo:\n  title: Example\n  version: 1.0.0\npaths:\n  /avatar:\n    post:\n      summary: Upload avatar\n      operationId: uploadAvatar\n      requestBody:\n        required: true\n        content:\n          image/png:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '200':\n          description: OK\n")))}m.isMDXComponent=!0;const d={toc:[]};function f(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package example\n\nimport (\n    "context"\n    "fmt"\n    "io"\n\n    "github.com/ogen-go/ogen/example/api"\n    ht "github.com/ogen-go/ogen/http"\n)\n\ntype Post struct {\n    Title       string\n    Content     string\n    Thumbnail   io.Reader\n    Attachments []io.Reader\n}\n\nfunc MakePost(ctx context.Context, client *api.Client, post Post) error {\n    req := api.NewPostReqForm{\n        Title:   post.Title,\n        Content: post.Content,\n    }\n    if t := post.Thumbnail; t != nil {\n        req.Thumbnail = api.NewOptMultipartFile(ht.MultipartFile{\n            Name: "thumbnail",\n            File: t,\n        })\n    }\n    for i, attachment := range post.Attachments {\n        req.Attachments = append(req.Attachments, ht.MultipartFile{\n            Name: fmt.Sprintf("attachment%d", i),\n            File: attachment,\n        })\n    }\n    _, err := client.NewPost(ctx, req)\n    return err\n}\n')))}f.isMDXComponent=!0;const g={toc:[]};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package example\n\nimport (\n    "context"\n    "strings"\n\n    "github.com/go-faster/errors"\n\n    "github.com/ogen-go/ogen/example/api"\n)\n\nvar _ api.Handler = PostService{}\n\ntype PostService struct{}\n\nfunc (s PostService) NewPost(ctx context.Context, req api.NewPostReqForm) (resp api.NewPostOK, _ error) {\n    if _, ok := req.Thumbnail.Get(); ok {\n        // Access optional file field.\n    }\n    // Iterate over files.\n    for _, attachment := range req.Attachments {\n        // Checking file name.\n        if !strings.HasPrefix(attachment.Name, "attachment") {\n            // Access array of files.\n            return resp, errors.Errorf("invalid file name: %q", attachment.Name)\n        }\n    }\n    return resp, nil\n}\n')))}y.isMDXComponent=!0;const b={toc:[]};function v(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"openapi: 3.0.3\ninfo:\n  title: Example\n  version: 1.0.0\npaths:\n  /post:\n    post:\n      summary: Creates new post\n      operationId: newPost\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required: [ title, content ]\n              properties:\n                title:\n                  type: string\n                content:\n                  type: string\n                thumbnail:\n                  type: string\n                  format: binary\n                attachments:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        '200':\n          description: OK\n")))}v.isMDXComponent=!0;const h={id:"file_upload",title:"File upload",sidebar_label:"File upload"},k=void 0,x={unversionedId:"spec/file_upload",id:"spec/file_upload",title:"File upload",description:"OpenAPI 3.0 provides two ways to upload files:",source:"@site/docs/spec/file_upload.mdx",sourceDirName:"spec",slug:"/spec/file_upload",permalink:"/docs/spec/file_upload",draft:!1,editUrl:"https://github.com/ogen-go/web/edit/main/docs/spec/file_upload.mdx",tags:[],version:"current",frontMatter:{id:"file_upload",title:"File upload",sidebar_label:"File upload"},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/docs/features"},next:{title:"Any",permalink:"/docs/types/any"}},T={},w=[{value:"File upload via request body",id:"file-upload-via-request-body",level:2},{value:"File upload via <code>multipart</code> request",id:"file-upload-via-multipart-request",level:2}],N={toc:w};function C(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"OpenAPI 3.0 provides two ways to upload files:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#file-upload-via-request-body"},"File upload via request body")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#file-upload-via-multipart-request"},"File upload via ",(0,a.kt)("inlineCode",{parentName:"a"},"multipart")," request"))),(0,a.kt)("h2",{id:"file-upload-via-request-body"},"File upload via request body"),(0,a.kt)("p",null,"File would be uploaded via request body.\nThe request body should be of type ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," and format ",(0,a.kt)("inlineCode",{parentName:"p"},"binary"),"."),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"spec",label:"Spec",default:!0,mdxType:"TabItem"},(0,a.kt)(m,{mdxType:"RequestBodySpecExample"})),(0,a.kt)(l.Z,{value:"client",label:"Client",mdxType:"TabItem"},(0,a.kt)(p,{mdxType:"RequestBodyClientExample"})),(0,a.kt)(l.Z,{value:"server",label:"Server",mdxType:"TabItem"},(0,a.kt)(u,{mdxType:"RequestBodyServerExample"}))),(0,a.kt)("h2",{id:"file-upload-via-multipart-request"},"File upload via ",(0,a.kt)("inlineCode",{parentName:"h2"},"multipart")," request"),(0,a.kt)("p",null,"Multiple files can be uploaded via ",(0,a.kt)("inlineCode",{parentName:"p"},"multipart")," request, along with other fields."),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"spec",label:"Spec",default:!0,mdxType:"TabItem"},(0,a.kt)(v,{mdxType:"MultipartSpecExample"})),(0,a.kt)(l.Z,{value:"client",label:"Client",mdxType:"TabItem"},(0,a.kt)(f,{mdxType:"MultipartClientExample"})),(0,a.kt)(l.Z,{value:"server",label:"Server",mdxType:"TabItem"},(0,a.kt)(y,{mdxType:"MultipartServerExample"}))))}C.isMDXComponent=!0}}]);