"use strict";(globalThis.webpackChunkdocs_v_2=globalThis.webpackChunkdocs_v_2||[]).push([[586],{5680:(e,t,n)=>{n.d(t,{xA:()=>y,yg:()=>N});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),g=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},y=function(e){var t=g(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),d=g(n),m=r,N=d["".concat(o,".").concat(m)]||d[m]||u[m]||l;return n?a.createElement(N,i(i({ref:t},y),{},{components:n})):a.createElement(N,i({ref:t},y))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var g=2;g<l;g++)i[g]=n[g];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8414:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>g});var a=n(8168),r=(n(6540),n(5680));const l={id:"optional",title:"Optional type",sidebar_label:"Optional"},i=void 0,p={unversionedId:"types/optional",id:"types/optional",title:"Optional type",description:"Description",source:"@site/docs/types/optional.md",sourceDirName:"types",slug:"/types/optional",permalink:"/docs/types/optional",draft:!1,editUrl:"https://github.com/ogen-go/web/edit/main/docs/types/optional.md",tags:[],version:"current",frontMatter:{id:"optional",title:"Optional type",sidebar_label:"Optional"},sidebar:"tutorialSidebar",previous:{title:"Map",permalink:"/docs/types/map"},next:{title:"Primitive",permalink:"/docs/types/primitive"}},o={},g=[{value:"Description",id:"description",level:2},{value:"Semantic",id:"semantic",level:2},{value:"Type",id:"type",level:3},{value:"Decoder behavior",id:"decoder-behavior",level:3},{value:"Semantic for arrays",id:"semantic-for-arrays",level:2},{value:"Type",id:"type-1",level:3},{value:"Decoder behavior",id:"decoder-behavior-1",level:3}],y={toc:g},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"description"},"Description"),(0,r.yg)("p",null,"Instead of using pointers, ",(0,r.yg)("inlineCode",{parentName:"p"},"ogen")," generates generic wrappers."),(0,r.yg)("p",null,"For example, ",(0,r.yg)("inlineCode",{parentName:"p"},"OptNilString")," is ",(0,r.yg)("inlineCode",{parentName:"p"},"string")," that is optional (no value) and can be ",(0,r.yg)("inlineCode",{parentName:"p"},"null"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"// OptNilString is optional nullable string.\ntype OptNilString struct {\n    Value string\n    Set   bool\n    Null  bool\n}\n")),(0,r.yg)("p",null,"Multiple convenience helper methods and functions are generated, some of them:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"// IsSet returns true if OptNilString was set.\nfunc (o OptNilString) IsSet() bool\n// Reset unsets value.\nfunc (o *OptNilString) Reset()\n// SetTo sets value to v.\nfunc (o *OptNilString) SetTo(v string)\n// IsSet returns true if value is Null.\nfunc (o OptNilString) IsNull() bool\n// Get returns value and boolean that denotes whether value was set.\nfunc (o OptNilString) Get() (v string, ok bool)\n// Or returns value if set, or given parameter if does not.\nfunc (o OptNilString) Or(d string) string\n\nfunc NewOptNilString(v string) OptNilString\n")),(0,r.yg)("h2",{id:"semantic"},"Semantic"),(0,r.yg)("p",null,"To implement decoder, ogen follows the rules below"),(0,r.yg)("h3",{id:"type"},"Type"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Schema"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"required"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"T"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Opt[#T]"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"nullable, but required"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Nil[#T]"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional & nullable"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"OptNil[#T]"))))),(0,r.yg)("h3",{id:"decoder-behavior"},"Decoder behavior"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Schema"),(0,r.yg)("th",{parentName:"tr",align:null},"no value"),(0,r.yg)("th",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"th"},"null")),(0,r.yg)("th",{parentName:"tr",align:null},"value"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"required"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},"OK")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=false")),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=true"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"nullable, but required"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Null=true")),(0,r.yg)("td",{parentName:"tr",align:null},"OK")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional & nullable"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=false")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=true"),",",(0,r.yg)("inlineCode",{parentName:"td"},"Null=true")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=true"),",",(0,r.yg)("inlineCode",{parentName:"td"},"Null=false"))))),(0,r.yg)("h2",{id:"semantic-for-arrays"},"Semantic for arrays"),(0,r.yg)("p",null,"For arrays semantic is slightly different"),(0,r.yg)("h3",{id:"type-1"},"Type"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Schema"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"required"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]T"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]T"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"nullable, but required"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"[]T"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional & nullable"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"OptNil[#T]Array"))))),(0,r.yg)("h3",{id:"decoder-behavior-1"},"Decoder behavior"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Schema"),(0,r.yg)("th",{parentName:"tr",align:null},"no value"),(0,r.yg)("th",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"th"},"null")),(0,r.yg)("th",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"th"},"[]")),(0,r.yg)("th",{parentName:"tr",align:null},"non-empty array"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"required"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},"Empty non-",(0,r.yg)("inlineCode",{parentName:"td"},"nil")," slice"),(0,r.yg)("td",{parentName:"tr",align:null},"Non-empty slice")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"nil")," slice"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},"Empty non-",(0,r.yg)("inlineCode",{parentName:"td"},"nil")," slice"),(0,r.yg)("td",{parentName:"tr",align:null},"Non-empty slice")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"nullable, but required"),(0,r.yg)("td",{parentName:"tr",align:null},"Error"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"nil")," slice"),(0,r.yg)("td",{parentName:"tr",align:null},"Empty non-",(0,r.yg)("inlineCode",{parentName:"td"},"nil")," slice"),(0,r.yg)("td",{parentName:"tr",align:null},"Non-empty slice")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"optional & nullable"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=false")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=true"),",",(0,r.yg)("inlineCode",{parentName:"td"},"Null=true"),", empty slice"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=true"),",",(0,r.yg)("inlineCode",{parentName:"td"},"Null=false"),", empty slice"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"Set=true"),",",(0,r.yg)("inlineCode",{parentName:"td"},"Null=false"),", non-empty slice")))))}u.isMDXComponent=!0}}]);